<!DOCTYPE html>
<html lang="pt-br">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cadastro de Alunos - Casa da Música</title>
    <!-- Font Awesome CDN -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 20px;
            background-color: #ffffff; /* Fundo branco */
        }
        h1 {
            text-align: center;
            margin-bottom: 30px;
            color: #323643; /* Cinza escuro */
            font-size: 2.5em;
            font-weight: bold;
        }
        form {
            max-width: 800px;
            margin: 0 auto;
            background: #93deff; /* Azul claro */
            padding: 30px;
            border-radius: 8px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); /* Sombra mais suave */
            margin-bottom: 20px;
        }
        .form-group {
            display: flex;
            justify-content: space-between;
            margin-bottom: 20px;
        }
        .form-group input, .form-group select, .form-group textarea {
            padding: 10px;
            border: 1px solid #606470; /* Cinza médio */
            border-radius: 5px;
            font-size: 1em;
            transition: border-color 0.3s; /* Efeito suave na borda */
            flex: 1;
            height: 40px; /* Altura ajustada */
        }
        .form-group input:focus, .form-group select:focus, .form-group textarea:focus {
            border-color: #323643; /* Cinza escuro */
            outline: none; /* Remove a borda padrão do navegador */
        }
        button {
            background-color: #323643; /* Cinza escuro */
            color: white;
            border: none;
            padding: 12px;
            cursor: pointer;
            border-radius: 5px;
            width: 100%;
            font-size: 1em;
            transition: background-color 0.3s; /* Efeito suave na cor do botão */
            margin-top: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        button i {
            margin-right: 8px; /* Adiciona espaço entre o ícone e o texto */
        }
        button:hover {
            background-color: #606470; /* Cinza médio ao passar o mouse */
        }
        .table-container {
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
            border-radius: 8px;
            background: #93deff; /* Azul claro */
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1); /* Sombra mais suave */
        }
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }
        th, td {
            padding: 12px;
            text-align: left;
            border: 1px solid #606470; /* Cinza médio */
            font-size: 1em;
        }
        th {
            background-color: #323643; /* Cinza escuro */
            color: white; /* Texto em branco no cabeçalho */
            font-weight: bold;
        }
        .button-container {
            display: flex;
            gap: 10px; /* Espaço entre os botões */
        }
        .button-update {
            background-color: #28a745; /* Verde */
            color: white;
            padding: 8px 12px;
            border: none;
            cursor: pointer;
            border-radius: 5px;
            font-size: 0.9em;
            transition: background-color 0.3s;
            display: flex;
            align-items: center;
        }
        .button-update:hover {
            background-color: #218838; /* Verde mais escuro */
        }
        .button-delete {
            background-color: #dc3545; /* Vermelho */
            color: white;
            padding: 8px 12px;
            border: none;
            cursor: pointer;
            border-radius: 5px;
            font-size: 0.9em;
            transition: background-color 0.3s;
            display: flex;
            align-items: center;
        }
        .button-delete:hover {
            background-color: #c82333; /* Vermelho mais escuro */
        }
    </style>
</head>
<body>

    <h1>Cadastro de Alunos</h1>

<form method="POST" action="/cadastrar-aluno" onsubmit="return validarCPF();">
    <div class="form-group">
        <input type="text" name="nome_completo" placeholder="Nome Completo" required style="flex: 3;">
        <input type="text" id="cpf" name="cpf" placeholder="XXX.XXX.XXX-XX" required maxlength="14" onblur="formatCPF(this)" style="flex: 1;">
    </div>
    <div class="form-group">
        <input type="text" name="telefone" placeholder="Telefone" required maxlength="15" onblur="formatTelefone(this)">
        <input type="email" name="email" placeholder="E-mail" required style="flex: 1;">
    </div>
    <div class="form-group">
        <input type="date" id="data_nascimento" name="data_nascimento" placeholder="Data de Nascimento" required oninput="calcularIdade()" style="flex: 0.2;">
        <input type="text" id="idade" name="idade" placeholder="Idade" readonly style="flex: 0.2; margin-left: 10px;">
        <input type="text" name="sexo" placeholder="Sexo" required style="flex: 0.2; margin-left: 10px;">
    </div>
    <div class="form-group">
        <input type="text" id="cpf" name="cpf" placeholder="XXX.XXX.XXX-XX" required maxlength="14" onblur="formatCPF(this)" style="flex: 1;">
        <input type="text" name="nome_responsavel" placeholder="Nome do Responsável" required style="flex: 2;">
    </div>
    <div class="form-group">
        <input type="text" id="cep" name="cep" placeholder="CEP" required style="flex: 0.2;" onblur="buscarEndereco()">
        <input type="text" id="endereco" name="endereco" placeholder="Endereço" required style="flex: 1;" readonly>
    </div>
    <div class="form-group">
        <input type="text" name="numero" placeholder="Número" required style="flex: 0.2;">
        <input type="text" name="bairro" id="bairro" placeholder="Bairro" required style="flex: 0.4;" readonly>
        <input type="text" name="cidade" id="cidade" placeholder="Cidade" required style="flex: 0.3;" readonly>
        <select name="estado" id="estado" required style="flex: 0.2;" readonly>
            <option value="SP">SP</option>
        </select>
    </div>
    <div class="form-group">
        <input type="text" placeholder="Complemento" style="flex: 0.4;">
    </div>
    <div class="form-group">
        <textarea placeholder="Observação" rows="4" style="flex: 1;"></textarea>
    </div>
    <div class="form-group">
        <select required style="flex: 0.5;">
            <option value="">Professor</option>
            <!-- Adicione opções de professores aqui -->
        </select>
        <select required style="flex: 0.5;">
            <option value="">Disciplina</option>
            <!-- Adicione opções de disciplinas aqui -->
        </select>
    </div>
    <button type="submit"><i class="fas fa-plus"></i> Cadastrar Aluno</button>
</form>


    <div class="table-container">
        <table>
            <thead>
                <tr>
                    <th>ID</th> <!-- Nova coluna para ID -->
                    <th>Nome</th>
                    <th>CPF</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>1</td> <!-- ID do aluno -->
                    <td>João Silva</td>
                    <td>123.456.789-00</td>
                    <td>
                        <div class="button-container">
                            <button class="button-update"><i class="fas fa-edit"></i> Atualizar</button>
                            <button class="button-delete"><i class="fas fa-trash"></i> Excluir</button>
                        </div>
                    </td>
                </tr>
                <!-- Repita as linhas conforme necessário -->
            </tbody>
        </table>
    </div>

    <script>
        function formatCPF(cpf) {
            let value = cpf.value.replace(/\D/g, ''); // Remove caracteres não numéricos
            if (value.length > 11) value = value.slice(0, 11);
            if (value.length > 3) {
                value = value.replace(/(\d{3})(\d)/, '$1.$2');
            }
            if (value.length > 7) {
                value = value.replace(/(\d{3})\.(\d{3})(\d)/, '$1.$2-$3');
            }
            cpf.value = value;
        }

        function formatTelefone(telefone) {
            let value = telefone.value.replace(/\D/g, ''); // Remove caracteres não numéricos
            if (value.length > 11) value = value.slice(0, 11);
            if (value.length > 6) {
                value = value.replace(/(\d{2})(\d)/, '($1) $2');
            }
            if (value.length > 10) {
                value = value.replace(/(\d{4})(\d)/, '$1-$2');
            }
            telefone.value = value;
        }

        function calcularIdade() {
            const dataNascimento = document.getElementById('data_nascimento').value;
            const dataNascimentoDate = new Date(dataNascimento);
            const hoje = new Date();
            const idade = hoje.getFullYear() - dataNascimentoDate.getFullYear();
            const m = hoje.getMonth() - dataNascimentoDate.getMonth();
            if (m < 0 || (m === 0 && hoje.getDate() < dataNascimentoDate.getDate())) {
                idade--;
            }
            document.getElementById('idade').value = idade; // Atualiza o campo de idade
        }

        function buscarEndereco() {
            const cep = document.getElementById('cep').value;
            // Realiza a busca do endereço utilizando a API ViaCEP
            fetch(`https://viacep.com.br/ws/${cep}/json/`)
                .then(response => response.json())
                .then(data => {
                    if (!data.erro) {
                        document.getElementById('endereco').value = data.logradouro;
                        document.getElementById('bairro').value = data.bairro;
                        document.getElementById('cidade').value = data.localidade;
                    } else {
                        alert('CEP não encontrado.');
                        document.getElementById('endereco').value = '';
                        document.getElementById('bairro').value = '';
                        document.getElementById('cidade').value = '';
                    }
                })
                .catch(error => {
                    console.error('Erro:', error);
                    alert('Erro ao buscar o endereço. Tente novamente.');
                });
        }

        function validarCPF() {
            const cpf = document.getElementById('cpf').value.replace(/\D/g, '');
            if (cpf.length !== 11 || /^(\d)\1{10}$/.test(cpf)) {
                alert('CPF inválido!');
                return false;
            }

            let soma = 0;
            let resto;

            // Validação do primeiro dígito verificador
            for (let i = 1; i <= 9; i++) {
                soma += parseInt(cpf[i - 1]) * (11 - i);
            }
            resto = (soma * 10) % 11;
            if (resto === 10 || resto === 11) {
                resto = 0;
            }
            if (resto !== parseInt(cpf[9])) {
                alert('CPF inválido!');
                return false;
            }

            // Validação do segundo dígito verificador
            soma = 0;
            for (let i = 1; i <= 10; i++) {
                soma += parseInt(cpf[i - 1]) * (12 - i);
            }
            resto = (soma * 10) % 11;
            if (resto === 10 || resto === 11) {
                resto = 0;
            }
            if (resto !== parseInt(cpf[10])) {
                alert('CPF inválido!');
                return false;
            }

            return true; // CPF válido
        }
    </script>
</body>
</html>





 
